install.packages("gbm")
}
library("EBImage")
library("gbm")
set.seed(2018)
setwd("./ads_fall2018_proj3")
setwd("./ads_fall2018_proj3")
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
setwd("./Spring2019-Proj3-spring2019-proj3-grp6")
setwd("./Spring2019-Proj3-spring2019-proj3-grp6")
run.cv=TRUE # run cross-validation on the training set
K <- 5  # number of CV folds
run.feature.train=TRUE # process features for training set
run.test=TRUE # run evaluation on an independent test set
run.feature.test=TRUE # process features for test set
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
dir <- "../data/train_set/" # This will be modified for different data sets.
LR_dir <- paste(train_dir, "LR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
LR_dir
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
dir <- "../data/train_set/"
"
dir <- "../data/train_set/"
dir <- "/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
LR_dir
dir <- "../data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
LR_dir
dir <- "../data/train_set/"
LR_dir <- paste(dir, "LR", sep="")
n_files <- length(list.files(LR_dir))
n_files
here
getwd()
dir <- "~/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
HR_dir <- paste(dir, "HR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
LR_dif
LR_dir
getwd()
LR_dir = "~/data/train_set/HR"
img1 = read.csv(paste(LR_dir, "img_0001.jpg", sep=""))
dir <- "/Users/weixuanwu/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/data/train_set/"
getwd()
dir <- "/Users/weixuanwu/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
HR_dir <- paste(dir, "HR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
dir <- "~/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
HR_dir <- paste(dir, "HR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
dir <- "/Users/weixuanwu/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
HR_dir <- paste(dir, "HR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
featMat <- array(NA, c(n_files * n_points, 8, 3))
dir <- "/Users/weixuanwu/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/data/train_set/"
install.packages("stringi")
library(stringi)
dir <- "/Users/weixuanwu/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/data/train_set/"
LR_dir <- paste(dir, "LR/", sep="")
HR_dir <- paste(dir, "HR/", sep="")
n_files <- length(list.files(LR_dir))
n_files
n_points = 1000
featMat <- array(NA, c(n_files * n_points, 8, 3))
labMat <- array(NA, c(n_files * n_points, 4, 3))
?array
featMat <- array(NA, c(n_files * n_points, 8, 3))
labMat <- array(NA, c(n_files * n_points, 4, 3))
featMat
length(featMat)
length(featMat[,,1])
12000000*3
12000000/8
n_files*n_points
?paste0
LR_dir
?sprintf
sprintf("%04d",1)
sprintf("%04d", 100)
img1 <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", 1), ".jpg"))
img1
as.array(img1)
img1 <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", 1), ".jpg"))
img1 = as.array(img1)
length(img1)
dim(img1)
img1 <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", 2), ".jpg"))
img1 = as.array(img1)
length(img1)
dim(img1)
img1 <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", 3), ".jpg"))
img1 = as.array(img1)
length(img1)
dim(img1)
img1
LR_dir
img1 <- readImage(paste0(LR_dir,  "img_", sprintf("%04d", 1), ".jpg"))
img1
dim(img1)
dim(img1)[1]
sample(dim(img1)[1])
dim(featMat)
cbind(0,4,5)
img1[,,1]
total = cbind(0, img1[,,j], 0)
total = cbind(0, img1[,,1], 0)
dim(total)
dim(img1[,,1])
total <- rbind(0, total, 0)
dim(total)
total[1,]
total[2,]
total = cbind(0, img1, 0)
total = rbind(0,total,0)
srow
n_points
srow <- sample(dim(imgLR)[1], n_points, replace = T)
srow <- sample(dim(img1)[1], n_points, replace = T)
scol = sample(dim(img1)[2], n_points, replace = T)
srow
cbind(srow+1, scol+1)
central = total[cbind(srow+1, scol+1)]
dim(img1)
dim(total)
total <- cbind(0, img1[,,1], 0)
total = rbind(0,total,0)
dim(total)
central = total[srow+1,scol+1]
central
central = total[cbind(srow+1,scol+1)]
central
dim(central)
central = total[cbind(srow+1,scol+1)]
class(central)
length(central)
length(srow)
length(scol)
central = total[cbind(srow+1,scol+1)]
dim(central)
srow
length(srow)
test = cbind(srow+1, scol+1)
test
dim(test)
total[test]
length(total[test])
dim(featMat)
1000*1500
LR_dir
HR_dir
feature, label = feature(LR_dir, HR_dir)
features = feature(LR_dir, HR_dir)
source("../lib/feature.R")
features = feature(LR_dir, HR_dir)
LR_dir
train_LR_dir = LR_dir
train_HR_dir = HR_dir
tm_feature_train <- NA
source("../lib/feature.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
tm_feature_train
?system.time
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/")
train_dir <- "data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
list.files(train_label_path)
train_label_path
train_dir <- "~/data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
train_label_path
list.files(train_label_path)
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
list.files(train_label_path)
train_label_path
pwd
getwd()
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/")
getwd()
# here replace it with your own path or manually set it in RStudio to where this rmd file is located.
# use relative path for reproducibility
getwd()
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6/")
# here replace it with your own path or manually set it in RStudio to where this rmd file is located.
# use relative path for reproducibility
getwd()
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
# here replace it with your own path or manually set it in RStudio to where this rmd file is located.
# use relative path for reproducibility
getwd()
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
getwd()
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
getwd()
dim(img1)
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
getwd()
train_dir <- "../data/train_set/" # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
train_label_path
list.files(train_label_path)
train_label_path
dir = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd(dir)
train_dir <- paste(dir, "/data/train_set/", sep="") # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
getwd()
dir = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd("~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6")
train_dir <- paste(dir, "/data/train_set/", sep="") # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
getwd()
getwd()
setwd(dir)
getwd()
wd <- getwd()
setwd("..")
parent <- getwd()
setwd(wd)
wd
set.seed(2018)
dir = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd(dir)
getwd()
dir = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd(dir)
wd <- getwd()
setwd("..")
parent <- getwd()
setwd(wd)
parent
getwd()
wd <- getwd()
setwd("..")
parent <- getwd()
setwd(wd)
parent
dir = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd(dir)
parent = "~/Documents/Spring2019/ADS/Spring2019-Proj3-spring2019-proj3-grp6"
setwd(parent)
parent
getwd()
train_dir <- paste(parent, "/data/train_set/", sep="") # This will be modified for different data sets.
train_LR_dir <- paste(train_dir, "LR/", sep="")
train_HR_dir <- paste(train_dir, "HR/", sep="")
train_label_path <- paste(train_dir, "label.csv", sep="")
getwd()
getwd()
setwd(parent)
getwd()
setwd(parent)
getwd()
train_dir <- paste(parent, "/data/train_set/", sep="") # This will be modified for different data sets.
parent
getwd()
getwd()
getwd()
setwd(parent)
getwd()
setwd(../data)
setwd(~/data)
setwd(data)
setwd("~/data")
setwd("data")
getwd()
setwd(parent)
getwd()
train_label_path
list.files(train_label_path)
list.files(train_label_path)
run.cv=TRUE # run cross-validation on the training set
K <- 5  # number of CV folds
run.feature.train=TRUE # process features for training set
run.test=TRUE # run evaluation on an independent test set
run.feature.test=TRUE # process features for test set
model_values <- seq(3, 11, 2)
model_values <- seq(3, 11, 2)
model_labels = paste("GBM with depth =", model_values)
setwd(parent)
extra_label <- read.csv(train_label_path, colClasses=c("NULL", NA, NA))
extra_label
dim(extra_label)
unique(extra_label[,2])
source("../lib/feature.R")
tm_feature_train <- NA
source("../lib/train.R")
source("../lib/test.R")
### load libraries
library("gbm")
### creat model list
modelList <- list()
source("../lib/train.R")
source("../lib/test.R")
### the dimension of response arrat is * x 4 x 3, which requires 12 classifiers
### this part can be parallelized
for (i in 1:12){
## calculate column and channel
c1 <- (i-1) %% 4 + 1
c2 <- (i-c1) %/% 4 + 1
cat(c1, c2)
# featMat <- dat_train[, , c2]
# labMat <- label_train[, c1, c2]
# fit_gbm <- gbm.fit(x=featMat, y=labMat,
#                    n.trees=200,
#                    distribution="gaussian",
#                    interaction.depth=depth,
#                    bag.fraction = 0.5,
#                    verbose=FALSE)
# best_iter <- gbm.perf(fit_gbm, method="OOB", plot.it = FALSE)
# modelList[[i]] <- list(fit=fit_gbm, iter=best_iter)
}
(2-1)%%4
(0-1)%%4
(1-1)%%4+1
(2-1)%%4+1
(0-1)%/%4
4%/%2
8%/%3.5
8/3.5
8%/%4.5
(12-1)%%4 + ``
(12-1)%%4 + 1
(12-4)%/%4 + 1
dim(label_train)
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
feat_train
dat_train
is.na(dat_train)
feat_train
dim(feat_train)
tm_feature_train
# n_files <- length(list.files(LR_dir))
n_files <- 2
LR_dir
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
}
imgLR
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
}
n_files = 1
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
}
srow
scol
n_files = 1
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
HR_srow <- 2*srow
HR_scol <- 2*scol
}
HR_srow
imgLR
dim(imgLR)
dim(imgHR)
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
HR_srow <- 2*srow
HR_scol <- 2*scol
for(j in 1:3){
total <- cbind(0, imgLR[,,j], 0)
total <- rbind(0, total, 0)
central <- total[cbind(srow +1, scol+1)]
}
}
total
dim(total)
dim(central)
length(central)
central
n_points = 1000
featMat <- array(NA, c(n_files * n_points, 8, 3))
labMat <- array(NA, c(n_files * n_points, 4, 3))
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
HR_srow <- 2*srow
HR_scol <- 2*scol
for(j in 1:3){
total <- cbind(0, imgLR[,,j], 0)
total <- rbind(0, total, 0)
central <- total[cbind(srow +1, scol+1)]
featMat[(i-1)*n_points + 1:n_points, 1, j] <- total[cbind(srow, scol)]-central
featMat[(i-1)*n_points + 1:n_points, 2, j] <- total[cbind(srow, scol + 1)]-central
featMat[(i-1)*n_points + 1:n_points, 3, j] <- total[cbind(srow, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 4, j] <- total[cbind(srow +1, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 5, j] <- total[cbind(srow +2, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 6, j] <- total[cbind(srow+2, scol+1)]-central
featMat[(i-1)*n_points + 1:n_points, 7, j] <- total[cbind(srow+2, scol)]-central
featMat[(i-1)*n_points + 1:n_points, 8, j] <- total[cbind(srow+1, scol)]-central
}
}
featMat
dim(featMat)
for(i in 1:n_files){
imgLR <- as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
imgHR <- as.array(readImage(paste0(HR_dir,  "img_", sprintf("%04d", i), ".jpg")))
srow <- sample(dim(imgLR)[1], n_points, replace = T)
scol <- sample(dim(imgLR)[2], n_points, replace = T)
HR_srow <- 2*srow
HR_scol <- 2*scol
for(j in 1:3){
total <- cbind(0, imgLR[,,j], 0)
total <- rbind(0, total, 0)
central <- total[cbind(srow +1, scol+1)]
featMat[(i-1)*n_points + 1:n_points, 1, j] <- total[cbind(srow, scol)]-central
featMat[(i-1)*n_points + 1:n_points, 2, j] <- total[cbind(srow, scol + 1)]-central
featMat[(i-1)*n_points + 1:n_points, 3, j] <- total[cbind(srow, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 4, j] <- total[cbind(srow +1, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 5, j] <- total[cbind(srow +2, scol+2)]-central
featMat[(i-1)*n_points + 1:n_points, 6, j] <- total[cbind(srow+2, scol+1)]-central
featMat[(i-1)*n_points + 1:n_points, 7, j] <- total[cbind(srow+2, scol)]-central
featMat[(i-1)*n_points + 1:n_points, 8, j] <- total[cbind(srow+1, scol)]-central
channels <- imgHR[,,j]
labMat[(i-1)*n_points + 1:n_points, 1, j] <- channels[cbind(HR_srow-1, HR_scol-1)]-central
labMat[(i-1)*n_points + 1:n_points, 2, j] <- channels[cbind(HR_srow-1, HR_scol)]-central
labMat[(i-1)*n_points + 1:n_points, 3, j] <- channels[cbind(HR_srow, HR_scol)]-central
labMat[(i-1)*n_points + 1:n_points, 4, j] <- channels[cbind(HR_srow, HR_scol -1)]-central
}
}
latMat
labMat
dim(labMat)
tm_feature_train <- NA
source("../lib/feature.R")
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
features = feature(LR_dir, HR_dir)
features
labMat
train_LR_dir
as.array(readImage(paste0(train_LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
features
class(features)
str(features)
is.na(features$feature)
!is.na(features$feature)
length(!is.na(features$feature))
sum(!is.na(features$feature))
LR_dir
as.array(readImage(paste0(LR_dir,  "img_", sprintf("%04d", i), ".jpg")))
tm_feature_train <- NA
if(run.feature.train){
tm_feature_train <- system.time(dat_train <- feature(train_LR_dir, train_HR_dir))
feat_train <- dat_train$feature
label_train <- dat_train$label
}
dat_train
